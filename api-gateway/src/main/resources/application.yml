

server:
  port: 8079

spring:
  application:
    name: api-gateway

  data:
    redis:
      host: redis 
      port: 6379
  profiles:
    active: dev


  
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

  
      routes:
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders
            - Method=POST
          filters: 
            - AddRequestHeader=X-Internal-Token, secret-gateway-key

            - name: RequestRateLimiter
              args:
                key-resolver: '#{@customerIdKeyResolver}'
                redis-rate-limiter.replenishRate: 1      
                redis-rate-limiter.burstCapacity: 60     
                redis-rate-limiter.requestedTokens: 5

        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**
            - Method=GET,PUT,DELETE,PATCH,POST
          filters: 
            - AddRequestHeader=X-Internal-Token, secret-gateway-key


        - id: restaurant-service
          uri : lb://restaurant-service
          predicates:
            - Path=/api/v1/restaurants/**

        - id: user-service
          uri : lb://user-service
          predicates:
            - Path=/api/v1/auth/**

        - id: payment-service
          uri : lb://payment-service
          predicates:
            - Path=/api/payments/**

       
       
     

eureka:
  client:
    service-url:
      # defaultZone: http://localhost:8761/eureka/
      defaultZone: http://discovery-server:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

jwt:
  secret: eF4$Kf!3v9XzQrL8mT592hJxw@0N1GzD

gateway:
  public:
    paths: 
      POST /api/v1/auth/**